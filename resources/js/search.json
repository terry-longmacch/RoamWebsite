[[{"i":"#","p":["Download the latest release (3.1 Beta)","View the change log for 3.1","Grab the source","Roam is a simple data collection application built using QGIS. Roam is built as a standalone fully packaged Python application with everything included. QGIS is not required to be installed on the users machines.","a","logo"]},{"l":"Quick Start","p":["Download and install the latest release","Run Roam Config Manager.exe","Create a project and some forms by following the creating a project guide","Run Roam.exe"]}],[{"l":"Getting Started","p":["The recommended way to create Roam projects is to use the Config Manager. The Config Manager will allow you to create and manage new projects and forms.","Open the Config Manager using Config Manager from the Windows Start Menu.","The tree view on the left side will list the available projects that Config Manager has found. The Roam tree item will display the Config Manager main page with information about Roam itself and how to get started.","logo","All projects that Roam finds in the projects folder will be listed under the Projects item. Selecting a project item will load the project allowing you to configure layers and forms for the project.","The map item under each Project folder will load a map view of the QGIS project this Roam project is using. The map view is for a quick reference about the project.","Selecting the Forms item will allow you to create a new data entry form for Roam. Data entry forms are only supported on Point layers currently, however lines and polygons are planned. If your QGIS project doesn't include any layers a note will be displayed explaining what to do.","NOTE Remember to always save your project using the Save Project button."]},{"l":"Creating a new project","p":["Select the Projects tree item","Click the add button logo","The config manager will ask you for a new folder name. All Roam projects are stored as folders in the projects folder. Folder names must be unique","Roam will create a new project in the projects folder.","Edit the title and description."]},{"l":"Adding QGIS layers","p":["Select the project node. Will be selected if you created a new project.","Click the Open In QGIS button logo. Config manager will watch for changes to the QGIS project.","QGIS will be loaded and you are able to add your own layers. Remember to use the Save.. Project button in QGIS","Tell Config Manager to reload the QGIS project."]},{"l":"Adding select layers","p":["In Roam select layers are layers that are enabled for selection for using the select tool and will have attribute information displayed in Roam. Any layers not ticked in the Select Layers list will be ignored.","Tick the box for each layer that should be selectable","Data entry forms can also only be added for enabled select layers. Remember to tick the layer that you would like to do data entry on.","logo"]},{"l":"Changing the splash image","p":["Currently there is no way in the config manager to change the project splash however by clicking on the Open Project Folder button","logo","you can replace the splash.png file with anything you like. Roam uses splash.png as a convention so remember to always keep that name."]},{"l":"Adding a new form","p":["Select the Forms tree item","Select the Add New button logo","Roam will ask for a new form folder name Like projects Roam forms are based on folders","Update the name of the form","Select the layer for data entry"]},{"l":"Adding attributes to the form","p":["Select the Add Attribute button","Fill in the relevent fields for each attribute added","Select the contol type.","When a attributes control type changes it will also add an extra informtion that control needs. For example, lists require more information before they can be created in Roam.","logo"]},{"l":"Previewing the form","p":["Forms can be previewed wihtout having to load Roam. Simply use the Preview tab on the Form page to enable preview mode. No defaults are loaded in preview mode but widgets will behave how they would when running Roam.","logo"]},{"l":"Changing the form icon","p":["Click the form icon in the form setup"]}],[{"l":"Form Events","p":["Roam is able to trigger another action on when widget is updated on the form . These are known as form events and allow you to tie values on the form together.","events","The events currently supported by Roam widgets on forms are:","On Update- Event is fired when the widget on the right changes value.","Actions that can be taken are:","Note: All actions apply to the widget on the left hand side.","Set Value- Set the value of the widget to the value set in the new value box.","Show- Show the widget on the left hand side.","Hide- Hide the widget.","Widget Expression- Reevaluate the expression used on the widget on the left hand side. e.g update area field if the width or length changes.","All expressions are passed the current form values so you can react to values currently being entered in the form.","The @value variable is always set to the new value of the widget on the right hand side that triggered the event."]},{"l":"Only When","p":["Actions can also be set to trigger only when the Only when expression returns true. For example you might want to show a field when the value of the widget on the right hand side is greater then 100 @value 100."]}],[{"l":"Info Links","p":["Roam will try to automatically handle URLs to websites and files in the info panel. It will also try and display a file based, base64, or binary image. If all else fails it will just display the string value.","Link format","Links to websites should start wtih http:// and links to files should start with file:///. Roam will check for both these and try to create a valid URL.","Replace URL with alias","The full URL can be aliased by appending |alias to the end of the URL string. Example http://google.com|Google will just display as Google as a hyperlink in the info panel."]}],[{"l":"Profiles","p":["Starting Roam with the --profile option allows you to control the folder that Roam and Config Manager will load settings and projects from.","Using this it is possible to setup different folders for different \"profiles\" with their own projects and plugins, keeping them isolated.","Roam will make the profile folder with the right layout to run.","Usage: roam.exe --profile C:\\temp\\testing"]},{"l":"Example","p":["This can be used to have test vs production style setup","roam.exe --profile C:\\temp\\test","will make the following setup:","C:\\temp\\test\\projects*","C:\\temp\\test\\plugins*","C:\\temp\\test\\logs*","C:\\temp\\test\\roam.config","roam.exe --profile C:\\temp\\prod","C:\\temp\\prod\\projects*","C:\\temp\\prod\\plugins*","C:\\temp\\prod\\logs*","C:\\temp\\prod\\roam.config"]}],[{"l":"Project Format","p":["Roam projects all live in the projects\\ folder in the Roam install location.","An example project folder layout looks like this:","Note: Project folders should have no spaces or special characters in the name. Will be imported by Python.","Each project folder should contain the following:","Roam will pick up the first QGIS project (.qgs) file in the folder and load it into the map. All form configuration and any other Roam configuration for the project is found in project.config.","A form folder must have a matching name in project.config and contain the following files:"]},{"i":"projectconfig","l":"Project.Config","p":["The project project.config file contains all the configuration that Roam needs for the form. The file format is YAML.","NOTE: YAML is sensitive to tabs. Why!? Make sure you are using spaces to indent. Also make sure you use a decent editor (Notepad++, Sublime, Vim, VS, etc) anything besides Notepad really, but you already do that."]},{"l":"Title and Description","p":["The minimum data the project.config file must contain is a title and description:","If a project.config only contains a title and description, a project with no forms will be created. A project with no forms can still be loaded and viewed. Handy for a info only project."]},{"l":"Select Layers","p":["To control which layers will show up in the info panel when using the select tool you can add a selectlayers: key.","If this is not found in the project.config file all layers will be selectable and the order is based on the project file order."]},{"l":"Providers","p":["Used to specify batch scripts which should be called from the sync page.","Output will be caught and displayed on the sync page."]},{"l":"Forms","p":["All forms are found under the forms: key. The basic layout of form config is:","The layer: key tells roam which layer this form is bound to. One layer can have many forms in Roam. This allows for a project to have different views (forms) into the data model. An example might be a asset table where all the different asset type information is in a single table rather then different layers. You could then have a Trees form, and also a Bin form which both point to the same layer just different columns.","An example of this setup might be:","This would then show up as two different forms."]},{"l":"Widgets","p":["All forms in Roam are made up of widgets. Most widgets allow for data entry, some are just visual (group box, horizontal line, etc). Each widget contains its own config section under the config: key.","Note: Inline comments marked as # Note: The order of the keys do not matter"]},{"l":"Default Values","p":["Widgets may also contain a default values."]},{"l":"Widget Types","p":["Supported widget types are:","List","Image","Text","TextBlock","Date","Checkbox","Widget Configs","Each widget type contains its own widget config. These are found under the config: key for each widget."]},{"l":"List","p":["List based on string list:","List based on layer:"]},{"l":"Image","p":["list"]},{"i":"text-textblock","l":"Text, TextBlock"},{"l":"Date","p":["list"]},{"l":"Checkbox"},{"l":"Examples","p":["Example list:","Example checkbox:"]}],[{"l":"Qt Designer Widgets","p":["This document outlines the Qt Designer widgets that match the control types in Roam if using","Designer widgets should have the objectName = fieldname Labels should have objectName = fieldname_label"]},{"i":"listmulti-list","l":"List/Multi List","p":["Designer Widget: QComboBox","Object Name: fieldname"]},{"l":"OptionRow","p":["Designer Widget: QWidget","Object Name: fieldname"]},{"i":"numbernumber-double","l":"Number/Number (Double)","p":["Designer Widget: QWidget","Object Name: fieldname","Right click widget and Promote To..","Class: Stepper","Header File: roam.editorwidgets.numberwidget"]},{"l":"Date","p":["Designer Widget: QWidget","Object Name: fieldname","Add a QDateTimeSpinBox and QPushButton inside the QWidget"]},{"l":"Text","p":["Designer Widget: QLineWidget","Object Name: fieldname"]},{"l":"TextBlock","p":["Designer Widget: QPlainTextEdit","Object Name: fieldname"]},{"l":"Checkbox","p":["Designer Widget: QCheckBox","Object Name: fieldname"]}],[{"l":"Searching","p":["Config searching using the search tab in Roam Config Manager and selecting the layer to enable for searching.","logo","You may have as many columns that you need per column.","Note: More columns will require longer index build times","The search index will be created on each project load and can be rebuilt in the UI if needed. Index building is done in the background doesn't block in the main Roam interface on the user."]}],[{"l":"Selection Configuration","p":["Select config is a advanced section you can add to the projects in order to control the information shown in the info panel."]},{"l":"Setting Active Tools","p":["You can control the tools that are available for a given layer with the following config."]},{"l":"SQL Info Blocks","p":["SQL Info1 and Info2 blocks are only supported currently on SQL Server and SQLite based layers.","Info1 queries will control the first block of information that is displayed when selecting a feature. Normally this is a simple dump of attribute from the feature however by using a info query you are able to control the display.","A Info2 query can show related records to the selected feature. This is a 1:M result when shown to the user. Any records returned in the info2 query will be shown as a new block of data.","All attributes of the selected feature are passed into the query and can be accessed using the : prefix e.g :type, :name where type and name are field names."]}],[{"l":"Syncing","p":["Syncing in Roam can be done by adding a providers section project.config(or settings.config).","The providers section looks like the following:","Each entry under providers is a sync button for that project in the Roam sync screen. The options are:","cmd The process to call to run the sync logic.","type must be set to replication at the moment","variables environment variables that will be set before running the sync process. You can access these in your sync process."]},{"i":"no-built-in-sync","l":"No built in sync?","p":["Currently Roam itself doesn't support, or contain, any magic syncing logic. This is left up to the admin of the project as it varies a lot per site and project."]}],[{"l":"Updating Fields","p":["When creating a new feature in Roam you can pull values from another layers using a default expression on the field.","Setup the default expressions using the config manager","Open Config Manager","Select the Project and Form","Select the field","Update the expression tab to be Capture value from field","Set the Capture Layer to the layer to take the value from","Set the ** Value Field** to the field which has the value you need","Set the Expression to a QGIS expression that will test if to return the value or not","expressions"]},{"l":"Common Expressions","p":["intersects($geometry, buffer($roamgeometry, 5))","within($geometry, buffer($roamgeometry, 5))","$roamgeometry is a reference to the currently selected feature when the expression is run. This is the feature being edited or created when the form is opened."]},{"l":"How it works","p":["When Roam creates a new feature the expression is tested against every feature within view to see if the expression will match.","Note: The first matching feature is used for the value and there is currently no UI control to pick other values"]}],[{"i":"updatinginstalling-projects","l":"Updating/Installing Projects","p":["As of 2.4 can now update and install projects if given a URL to an update server. The config manager can publish projects in the right format to allow Roam the client to download them. New projects found on the server are offered for install while existing projects can be updated."]},{"i":"things-you-need","l":"Things you need:","p":["A webserver (IIS or Apache will be fine)","Roam config manager on a admin machine","Projects can be updated by using the Roam Config manager to publish a project zip file package to a folder that is also exposed via the webserver","Note: You can use python -m SimpleHTTPServer for testing (Don't use this in production though)"]},{"i":"steps-to-publish-projects","l":"Steps to publish projects:","p":["Set publish folder in Config Manager under the Projects node (Deploy Folder). This folder must have write permissions for the current user.","Create a Virutal Directory in your webserver to this folder","Create/Manage you project in Roam","Click the \"Publish Install\" button in the project page toolbar or","Click the \"Publish Update\" button to create a update only package (no data included)","The version of the project is increased on each save/publish. Roam will check the version installed local to the version on the server to see if a new version needs to be installed.","Note: Currently projects must include at least a single install package."]},{"l":"Setting the update server in Roam","p":["Add the URL of the server into the Settings page of Roam. e.g http:\\\\my_server\\RoamProjects","Select the Project tab for Roam to search for new/updated projects.","Note: Currently Roam searches for new packages in the background and doesn't give a lot of error reporting if something does go wrong. Errors are logged in the \\log folder, check there if your projects are not showing up."]},{"l":"Updating or Installing projects","p":["New projects found on the server are shown with an install button next to there project entry. Installing a project will download the project package and extract it into the local folder.","It is possible to update and install packages will using another project as all updating/installing is done in the background without affecting the currently running projects. Connection to server required of course.","Roam will also run and install the update back"]},{"l":"Internal Workings","p":["At the current time Roam Config Manager will create a projects folder in the publish folder on the server. It will also create and manager a roam.txt file. roam.txt contains the information about the projects on the server. The config manager will manage this file for you. You should never had to edit it by hand.","Here is an example of a roam.txt:"]},{"l":"DMS Demo projects","p":["Demo projects from DMS can be installed into Roam using the following update server http://demo.mapsolutions.com.au/RoamDemos/"]}],[{"l":"Widget Types","p":["All forms in Roam are made up of widgets. Most widgets allow for data entry, some are just visual (group box, horizontal line, etc). Each widget contains its own config section under the config: key.","All widgets can be configured using the config manager.","Supported widget types are:","List/Multi List","Option Row","Number/Number Double","Image","Text/TextBlock","Date","Checkbox"]},{"l":"List"},{"l":"Image","p":["Image widgets supports load from folder, camera capture, and drawing","Drawing pad image"]},{"i":"text-textblock","l":"Text, TextBlock","p":["date"]},{"l":"Number"},{"l":"Date"},{"l":"Checkbox","p":["date"]},{"l":"Option Row","p":["Option rows allow the user to pick one/many options using a row of buttons. Buttons can also have icons or colours","Option row with icons optionrow Normal option row optionrow Normal option row optionrow"]}],[{"l":"Major Features","p":["Simple to use interface for field users.","Polygon, Line, Point capture and editing (including 3D).","Rich auto generated forms.","Easy to use forms for field users.","Configurable info panels.","Image and drawing pad controls.","GPS support including capture at location, and vertex at location.","Translation support.","Legend page.","GPS Logging and tracking.","[[Plugin model for extra side pages and toolbars|Plugins]]"]}],[{"i":"changelog-for-roam-31","l":"Changelog for Roam 3.1","p":["List of new features and changes in Roam 3.1","Release Files"]},{"l":"Changes","p":["Complete overhaul of build process.","Use OSGeo4W as main dependency.","Updated all PIP dependencies.","Changed logo. No remaining association with IntraMaps.","Improved GPS access.","Removed legacy scripts because these aren't maintained. Build only on Windows.","Minor bug fixes.","See for list of closed tickets."]}],[{"i":"changelog-for-roam-30","l":"Changelog for Roam 3.0","p":["List of new features and changes in Roam 3.0","Release Files"]},{"l":"Changes","p":["GPS Averaging","3-Dimensional Coordinate Capture"]}],[{"i":"changelog-for-roam-25","l":"Changelog for Roam 2.5","p":["List of new features and changes in Roam 2.5","Release Files"]},{"l":"Changes","p":["[API] Add zoom_to_feature method","[API] Allow saving features while ignoring form checks. e.g Forced save.","[API] Form.new_feature can take preloaded values.","[App] New --profile command line option to load projects/plugins/logs, etc from profile folder See Profiles for more details","[App] Only load project.qgs by default.","[App] Plugins folder will be found relative to roam.config","[Config] image_size to set fixed image size","[Config] smallmode: true will force toolbars into icon mode at start up.","[Forms] Add section support","[Forms] Field expressions can now be run on Capture/Save or Both.","[Forms] Form widget events. Events can be used to change other values or show/hide other controls.","[Forms] Generic attachment widget (saved into _ attachements, can copy or move attachment to folder)","[Forms] New timestamp option for drawing widget.","[Forms] New top down form style.","[Forms] Show GPS marker on map image in drawing widget","[Mapping] GPS way point markers","[Mapping] Red highlight for invalid geometry (Doesn't stop the user saving feature)","[Mapping] Snapping enabled on all layers.","[Plugins] Allow plugins to create toolbars in the map widow","[Project] Allow [% qgisexpression %] in info queries. Will be replaced before the query is run.","[UI] Move the status bar to the map page only.","[UI] Project download status","By default Roam will only load project.qgs unless projectfile is set in project.config. This will only be issue if you changed the project name after using Roam Config Manager."]},{"i":"config-manager-changes","l":"Config manager changes:","p":["3126d28 Add new form style option in form config UI","ecb78ce Add search config UI to config manager. Fix search for spaces in columns","c607f62 Add icon picker for form. Update search icon","b65b40a Add html view of project info","8bd4123 Add style widget from QGIS for inline styling","ca147b3 Add plugins node to show installed plugins.","f742584 Rename Default to expression in config manager UI","9a7c093 Add events widget"]},{"i":"minor-changes","l":"Minor Changes:"},{"l":"Bug fixes","p":["07fc057 Fix error on no geom in geom widget","0e3ae16 Fix #301 - Fix missing default expression button","2d3b01f Fix #294 - Crash on missing layer in search","418ddaf Fix image from file loading","4357a19 Fix sizing of list view for long entries","4ab7c11 Fix #272 - Trim GPS DOP values","9600f4e Better field replacement in info panel","aa1c929 Fix crash on missing geom info","c9d503d Fix image path loading with space","ca036a7 Fix #306 - Fix error on no results in search","caded27 Fix missing info dock delete logic","df73d81 Fix show/hide of raster","e59cb48 Fix #297 - Disable add vertex button with GPS disconnect","e72f59c quit project search thread on exit","e95fa92 Fix time selection in date time widget","f9a4832 Fix image crash. Deep copy widgets config in feature form","ffcdb3e Use QgsNetworkManager for project download","Fix error for fields with spaces in info panel.","See for list of closed tickets."]}],[{"i":"changelog-for-roam-24","l":"Changelog for Roam 2.4","p":["List of new features and changes in Roam 2.4","Release Files"]},{"l":"Changes","p":["Project update and install support","GPS line and polygon tracing","Delete button on info panel","Move node support in edit geometry"]},{"i":"config-manager-changes","l":"Config manager changes:","p":["Refactor config manager widget logic (more stable then before)","Add new tree item for defining Info1 and Info2 for selection layers"]},{"i":"minor-changes","l":"Minor Changes:","p":["Font and icons for smaller res screens (still a work in progress)"]},{"l":"Bug fixes","p":["See"]}],[{"i":"changelog-for-roam-23","l":"Changelog for Roam 2.3","p":["List of new features and changes in Roam 2.3","Release Files"]},{"l":"Changes","p":["Search plugin. See Setting Up Searching on configuring search.","Support for using sqlite in info panel. See Select config on using info queries","Feature attributes passed to info queries","Solid outline for selection","Travis CI testing for test suite","Delete button moved to top for image widget","Move message bar to bottom of screen and style a bit nicer","Skip edit buffer for saving (should make edits faster)","Compress Info panel buttons to single row"]},{"i":"notable-bug-fixes","l":"Notable bug fixes:","p":["Fix saving issue with images after edits","Better font scaling","Fix GPS port selection","Fix loading camera if not found","Fix crash in info panel with MS SQL layers"]}],[{"i":"changelog-for-roam-22","l":"Changelog for Roam 2.2","p":["List of new features and changes in Roam 2.2","Release Files"]},{"l":"Major Features","p":["[[Built on QGIS 2.4|https://i.chzbgr.com/maxW500/465448704/hAA7ACF3A/]]","Info2 and Info1 block support (SQL Server only at the moment)","[[Support for enable/disable of capture, edit, edit geom modes on layers|Select-Config#setting-active-tools]]","[[Plugin model for extra side pages|Plugins]]","[[Better link support in info panel|Info-Links]]","Image file saving support","Images are now stored in the _images folder in the project folder. The file name is based on a date time stamp","Search in list widgets."]},{"l":"New Widgets"},{"l":"Option widget","p":["optionrow optionrow","Option row buttons can also have colour assigned for each button when selected","optionrow"]},{"l":"Stepper buttons for numbers","p":["stepper"]},{"l":"Multi select lists","p":["multilist"]},{"l":"Minor Changes","p":["Logs now in new logs\\ folder (Added by [[Heather|https://github.com/terry-longmacch/Roam/pull/141]])","Expand Info panel for more room.","max_value('layer', 'field') default function","Remember value button config in config manager","Other fixes"]},{"l":"API Changes","p":["Forms on attribute forms (to support embedded forms with no geometry)","Cleaner API for adding emended widgets on the form."]}],[{"i":"changelog-for-roam-21","l":"Changelog for Roam 2.1","p":["List of new features and changes in Roam 2.1","Release Files"]},{"l":"Major Features","p":["Polygon and line capture support","Recapture geometry","Drawing pad","Camera (Windows only)","GPS page","Translation support","API clean up and extras (access to GPS on forms etc)","Legend page","Attribute Help","GPS Logging and tracking","New roam.api module for public facing API. Anything imported from this module will have stable API in 2.x releases.","Loading projects from other folders"]},{"l":"Minor Changes","p":["New action picker banner.","Form selected replaced with button","Blue GPS marker.","Replace old PNG icons with new SVG blue set.","New icons for config manager","Each settings.config file has now been renamed to match the settings name. form.config, roam.config, project.config. Old settings.config method will continue to work after update"]},{"i":"major-features-1","l":"Major Features"},{"l":"Polygons and lines","p":["Polygon and line capture is now possible. The capture tool will swap to point/line/polygon depending on the layer geometry type.","logo logo","The lines also have a handy distance marker that will update in real time to show you how long the segment is."]},{"l":"Drawing pad","p":["The image widget has been expanded to support a new drawpad input mode. The drawing pad allows for free hand text, and the ability to annotate images and a snapshot of the current map view.","logo"]},{"l":"Camera","p":["Camera integration has been added into image widget. Images from the camera can also be annotated using the drawing pad.","logo"]},{"l":"GPS page","p":["Basic GPS information is now exposed on the GPS page on the sidebar. * DOP values are also shown in the status bar for aiding data collection.","logo logo"]},{"l":"Translation support","p":["Roam can now load Qt translation files from the i18n folder. Pull requests welcome for translations."]},{"l":"Legend","p":["Roam now includes a legend page for viewing a simple auto generated legend from the map.","logo","Adding","to the project.config controls which layers are shown. If this is not found all layers are shown. Note: Only vector layers."]},{"i":"new-action-picker-banner","l":"New action picker banner.","p":["Roam now sports a new action picker panel that lists actions that can be taken at the time. The panel is used for picking a form as well as selecting a image source.","logo"]},{"l":"Form selected replaced with button","p":["The form selection dropdown has been replaced with a tool button so it fits in the overall UI better. The list view has been replaced with the new action picker banner.","logo"]},{"l":"Linux support","p":["Roam can be run from source on Linux using the ./build_linux.sh ./run_linux.sh command. Linux support is only new and might need some tweaks to add better support. Tested only on Ubuntu 10.10."]},{"l":"Attribute Help","p":["Attributes in Roam forms can now have a hyper link that opens a help panel with custom help for the attribute.","logo","Help files are auto linked using {fieldname}.html convention from the {formfolder}/help folder.","Full HTML and Javascript support.","Relative paths work for loading images:","a href=./Fig14.jpgimg src=./Fig14.jpg/a"]},{"l":"GPS Logging and tracking","p":["GPS logging and tracking can be enabled by having a writeable layer named gps_log in your project file. This file can be anything QGIS can write. Each GPS position will be saved to layer. GPS information will also be saved to the layer when given the right field names.","Auto field name mapping supports the following: x, y, z, user, localtime, latitude, longitude, elevation, speed, direction, pdop, vdop, hacc, vacc, time, fixMode, fixType, quality, satellitesUsed, status","Tip: use the following rule style to style the last 5 minutes of logging points minute(age($now, localtime)) 5","gpslogging"]}],[{"l":"Building From Source","p":["If you are planning on doing any development work on Roam or are wanting to stay current with recent changes you will need to build from source."]},{"l":"Initial Software Installs","p":["In order to build Roam from source, the following software will need to be installed on the host computer."]},{"l":"OSGeo4W","p":["OSGeo4W includes software dependencies including QGIS, PyQt5, Python and GDAL.","During installation select the Advanced Installation option. Then choose the following options at a minimum.","Desktop","qgis or qgis-ltr","Libs","gdal","gdal-ecw","python3-pip"]},{"i":"innosetup-optional","l":"InnoSetup (Optional)","p":["While Roam can be distributed as a ZIP file, InnoSetup can be used to automate the process of building a Windows installer."]},{"i":"qt-linquist-optional","l":"Qt Linquist (Optional)","p":["If you would like to compile .ts language translation files lrelease.exe needs to be installed on the computer. This program does not come packaged in OSGeo4W, but potentially might be installed using pip. Otherwise installers can be found on the internet, but care should be taken to verify the source as trustworthy."]},{"l":"Environment Variables","p":["A number of environment variables are specified in the scripts\\setenv.bat script.","For standard installs of the software described above, it is unlikely any changes will be required. However, if software is installed in non-standard locations, this file may need to be edited.","It is best to review this file, just to ensure it seems accurate."]},{"l":"Building","p":["The main build script is build.bat in the base folder of the Roam source code.","In Windows, open a command prompt ( cmd.exe) and navigate to the base folder of the source code.","The build script supports the following options:","build","zip","installer","release","design","watch","test","test-only","api-docs","These options perform the following actions."]},{"l":"Build","p":["or simply","Cleans up previous builds, downloads any required dependencies using pip, then compiles and builds the Roam.exe and ConfigManager.exe executables in the build folder."]},{"l":"Zip","p":["Combines all of the files in the build folder into a zip file called Roam.zip, that can be found in the release folder.","For the zip, installer and release options you can append another parameter onto the command to include version information in the new file name.","For instance:","will produce a file named Roam 3.1 Beta.zip.","For all commands you can also use the greater than symbol to capture the command output in a file.","For example:","will capture the command output to the build_zip.log file."]},{"l":"Installer","p":["Uses InnoSetup to compile a Roam Installer.exe file in the release folder."]},{"l":"Release","p":["Runs the full build. Equivalent to running build, zip and installer individually."]},{"l":"Design","p":["Opens the Qt Designer application, which can be used as a graphical interface to edit the various .ui files.","When these files are compiled using build a python .py file will be created. These .py should never be edited themselves, as they will be overwritten next time build is run."]},{"l":"Watch","p":["A background task that can be run while .ui files are being edited, in order to see changes made without having to run a complete build. See section on Running."]},{"l":"Test","p":["Performs various unit tests on the software. Produces a html report."]},{"l":"Test-only","p":["Performs the same tests as test, but does not produce the html report."]},{"l":"Api-docs","p":["Produces basic API reporting using the Pdoc API Documentation."]},{"l":"Running","p":["Besides running the executable created as a result of the build process, it is possible to run both Roam and ConfigManager directly from source.","This can be useful in cases where changes need to be made, but you want to quickly see results, without completely re-building the application every time. This can be used in conjunction with build watch when working with .ui files.","To run Roam execute the run.bat script, while ConfigManager can be started using the run_config.bat script in the command prompt."]}],[{"l":"Plugins","p":["As of Roam 2.2, Roam will support a basic plugin model to allow adding new panels on the side at run time.","Plugins live in the plugins\\ folder and are normal Python modules or packages. The only restriction on naming is the module or package must end with _plugin. e.g plugins\\mytest_plugin.py","The plugin API looks for the following functions in a plugin:","A pages() function which returns a list of QWidgets to use as pages","A toolbars() function which returns a list of toolbars that can be added to the bottom of the map window.","A simple example plugin is as follows:","roam.api.plugins.Page is a shortcut base class that defines default attributes. Your class can provide, or leave them undefined, the following attributes:","title (string)","icon (path to icon)","projectpage (bool)","projectpage defines if the page should belong in the upper button group, False if it is a always on panel like Settings, GPS, etc."]},{"l":"Enabling plugins","p":["Plugins are enabled on a per project basis. Add:","to enable the above plugin for a given project. By default all plugins are disabled for each project unless enabled.","When the project is loaded a new button, with the same text as title, will be added under Legend."]},{"l":"Handy functions","p":["Page and ToolBar also has auto connected selection_changed, project_loaded methods. Simply override and you are good to go:","selection is a dict of QgsVectorLayer: list-of-QgsFeatures"]}],[{"l":"Custom Form Logic"}],[{"l":"Important Notes","p":["While effort is always made to maintain API compatibility sometimes things change without knowing the full effect. If you have used the API of Roam to create plugins or add extra logic to your forms please test before deploying new versions into production.","There is no harm in insstalling many versions of Roam side by side or sharing the config/projects using the --profile commandline option. This will let you setup and test new installs and find any issues."]}],[{"l":"Events","p":["Roam events is a global API object which gives you access to common events within Roam. The primary use of the RoamEvents object is for use with plugins or feature forms.","All events can be accessed by importing RoamEvents using from roam.api import RoamEvents","The RoamEvents class has the following methods:"]}],[{"l":"Form API","p":["Each form form in Roam has the ability to have custom logic defined behind the form. The feature form has the following methods that can be used for hooks.","Before any custom logic can be used it must be registered with the Roam form object. This is normally done in the forms folder __init__.py file like this:","When a form is created in Roam a form.py will also be created with the following:","You can also overload the save and delete methods:","Note: When overriding delete logic it is always a good idea to call the base delete method as this handels a lot of the logic for you. If you wish to raise a error in delete you can call FeatureDeleteExpection.not_saved(message) to cancel and let the user know.","Note: When overriding save logic it is always a good idea to call the base save method as this handels a lot of the saving logic for you. If you wish to raise a error in save you can call FeatureSaveExcpection.not_saved(message) to cancel and let the user know."]},{"l":"Accessing widgets","p":["All widgets that have been created on the form via Roam can be accessed via self.boundwidgets:","Setting values can be done via value() and setvalue() functions","Widgets also have a generic valuechanged signal","Generally you should connect to the valuechanged in the forms uisetup method in order to correctly handle when the values are loaded into the form"]}],[{"l":"FAQ"},{"i":"what-platforms-are-supported","l":"What platforms are supported?","p":["Current Roam only runs on Windows based devices (tablet or desktop)"]},{"l":"Could it run on Linux and OS X","p":["It can run from source on Linux"]},{"i":"no-android","l":"No Android?","p":["Once QGIS core is ported to Qt5 as well as PyQt5 support added we might have the ability to do a android port."]},{"l":"What geometry types are supported for capture","p":["All geometry types are supported. Points, Lines, and Polygons."]},{"i":"do-i-need-to-install-qgis-or-python-on-the-client","l":"Do I need to install QGIS or Python on the client?","p":["Nope. Roam is a fully standalone Python application that bundles everything it needs into a single folder, include PyQt, gdal, QGIS, and even Python. Fancy."]},{"l":"I have a cool feature. Will you accept pull requests","p":["Yes pull requests will be accepted, provided they fit in with the overall goal of the project. Roam is fully open source (GPL) and that is part of the culture."]}]]